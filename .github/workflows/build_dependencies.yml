name: build_dependencies

defaults:
  run:
    shell: bash -ieo pipefail {0}

on:
  [workflow_call,  workflow_dispatch]


jobs:
  build_and_cache_ros:

    
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout pycram
        uses: actions/checkout@v3
        with:
          path: 'ros_ws/src/pycram'
          repository: ${{github.repository}}
          ref: ${{github.ref}}
          submodules: recursive
          
      - name: load-ros
        id: load_ros
        uses: actions/cache@v2
        with:
          path: ~/.ros
          key: ros
        
          
      - if: ${{steps.load_ros.outputs.cache-hit != 'true'}}
        name: install ros
        id: install-ros
        uses: betwo/github-setup-catkin@master
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        with:
          # Version range or exact version of ROS version to use, using SemVer's version range syntax.
          ros-version: noetic
          build-tool: 'catkin_tools'

          # Root directory of the catkin workspace
          workspace: $GITHUB_WORKSPACE/ros_ws
      - if: ${{steps.load_ros.outputs.cache-hit != 'true'}}
        name: build and source workspace
        run: |
          cd ros_ws
          catkin_make
          echo 'export ROS_HOSTNAME=localhost' >> ~/.bashrc
          echo 'source $GITHUB_WORKSPACE/ros_ws/devel/setup.bash' >> ~/.bashrc
        

      - if: ${{steps.load_ros.outputs.cache-hit != 'true'}}
        name: cache-ros
        id: cache_ros
        uses: actions/cache/save@v3
        with: 
          path: ~/.ros
          key: ros
  
  cache_pip:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout pycram
        uses: actions/checkout@v3
        with:
          path: 'ros_ws/src/pycram'
          repository: ${{github.repository}}
          ref: ${{github.ref}}
          submodules: recursive
      - name: load pip cache
        id: load-pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip

      - if: ${{ steps.load-pip.outputs.cache-hit != 'true' }}
        name: install pip requirements
        run: |
          cd $GITHUB_WORKSPACE/ros_ws/src/pycram
          sudo pip3 install -r requirements.txt

      - if: ${{ steps.load-pip.outputs.cache-hit != 'true' }}
        name: install extra
        run: |
          sudo pip3 install --ignore-installed pytest pyjpt mlflow

      - if: ${{ steps.load-pip.outputs.cache-hit != 'true' }}
        name: cache pip
        id: cache-pip
        uses: actions/cache/save@v3
        with:
          path: ~/.cache/pip
          key: pip
        
        
